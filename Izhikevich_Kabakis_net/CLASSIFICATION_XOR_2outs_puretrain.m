for hhh=1:20

total_iterations=100;
time=[];
all_success=[];
total_epochs=[];


for iterations=1:total_iterations
options_for_training=pure_train_optionset('Epochs', 100, ...
'Inhibitory','true', ...
'Excitatory','true', ...
'Inhibitory_function','purelin', ...
'Excitatory_function','purelin', ...
'Inhibitory_momentum',0.1, ...
'Excitatory_momentum',0.1, ...
'Inhibitory_momentum_degradation',0, ...
'Excitatory_momentum_degradation',0, ...
'Inhibitory_learning_rate',0, ...
'Excitatory_learning_rate',0, ...
'Target_success',0.95, ...
'Randomize_batch','true', ...
'Renew_weights','false',...
'Epochs_for_renewal',2,...
'Report','false',...
'Discrepancy_inhibition',0,...
'Discrepancy_excitation',1,...
'Discrepancy_inhibition_degradation',0,...
'Discrepancy_excitation_degradation',0);

disp(['Test number: ' num2str(iterations)])
options=izknet_optionset('Initialization','whatever');

net_XOR=izknet([2 2],options);
tic
%net_XOR.layer_weights{1}=x;
[net_XOR,~, success]=pure_train_izknet4(net_XOR,[0 1 1 0;1 0 1 0],[1 1 0 0;0 0 1 1],options_for_training,[2 2],options);
time=[time toc];
all_success=[all_success success(numel(success))];
total_epochs=[total_epochs numel(success)];


end


%correct=[correct sum(all_success==1)]
correct_percentage=sum(all_success==1)/total_iterations
false=numel(all_success)-correct
total_epochs=mean(total_epochs)
all_success_mean=mean(all_success)
time=mean(time)
end